// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/String.jack

/**
 * Represents character strings. In addition for constructing and disposing
 * strings, the class features methods for getting and setting individual
 * characters of the string, for erasing the string's last character,
 * for appending a character to the string's end, and more typical
 * string-oriented operations.
 */
class String {
    field Array string;
    field int length;
    /** constructs a new empty string with a maximum length of maxLength
     *  and initial length of 0. */
    constructor String new(int maxLength) {
        let string = Array.new(maxLength);
	let length = 0;
	return this;
    }

    /** Disposes this string. */
    method void dispose() {
        do string.dispose();
	let length = 0;
	return;
    }

    /** Returns the current length of this string. */
    method int length() {
        return length;
    }

    /** Returns the character at the j-th location of this string. */
    method char charAt(int j) {
        return string[j];
    }

    /** Sets the character at the j-th location of this string to c. */
    method void setCharAt(int j, char c) {
        let string[j] = c;
	return;
    }

    /** Appends c to this string's end and returns this string. */
    method String appendChar(char c) {
        let string[length] = c;
        let length = length + 1;
	return string;
    }

    /** Erases the last character from this string. */
    method void eraseLastChar() {
        let length = length - 1;
	return;
    }

    /** Returns the integer value of this string, 
     *  until a non-digit character is detected. */
    method int intValue() {
        var char v;
	var int i;
	var char c;
	let v = 0;
	let i = 0;
	while (i < length) {
	    let c = string.charAt(i);
	    if (c < 48) {
                return v;
            }
	    else {
	        if (c > 57) {
                    return v;
                }
		else {
		    let v = v * 10 + c - 48;    
		}
	    }
	}
	return v;
    }

    /** Sets this string to hold a representation of the given value. */
    method void setInt(int val) {
        var int lastDigit;
	var int tmp;
	var int c;
	var String zero;
	let zero = "0";
	let tmp = val / 10;
	let lastDigit = val - tmp * 10;
	let c = lastDigit + 48;
	if (val < 10) {
	}
	else {
	    do string.setInt(tmp);
        }
        do string.appendChar(c);	
        return;	
    }

    /** Returns the new line character. */
    function char newLine() {
        return 10;
    }

    /** Returns the backspace character. */
    function char backSpace() {
        return 8;
    }

    /** Returns the double quote (") character. */
    function char doubleQuote() {
        return 34;
    }
}
