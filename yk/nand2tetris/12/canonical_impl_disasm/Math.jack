class Math {
    static int twoToThe;
    static int array;

    function void init() {
        var int i;
        let array = Array.new(16);
        let twoToThe = Array.new(16);
        let twoToThe[0] = 1;

        while (i < 15) {
            let i = i + 1;
            let twoToThe[i] = twoToThe[i - 1] + twoToThe[i - 1];
        }

        return;
    }

    function int abs(int x) {
        if (x < 0) {
            let x = -x;
        }

        return x;
    }

    function int multiply(int x, int y) {
        var int sum, tmp, yy, j;
        var boolean is_neg;
        let is_neg = ((x < 0) & (y > 0)) | ((x > 0) & (y < 0));
        let x = Math.abs(x);
        let y = Math.abs(y);

        if (x < y) {
            let tmp = x;
            let x = y;
            let y = tmp;
        }

        while ((yy - 1) < (y - 1)) {
            if (~((twoToThe[j] & y) = 0)) {
                let sum = sum + x;
                let yy = yy + twoToThe[j];
            }

            let x = x + x;
            let j = j + 1;
        }

        if (is_neg) {
            let sum = -sum;
        }

        return sum;
    }

    function int divide(int x, int y) {
        var int i, result;
        var boolean is_neg, is_done;

        if (y = 0) {
            do Sys.error(3);
        }

        let is_neg = ((x < 0) & (y > 0)) | ((x > 0) & (y < 0));
        let array[0] = Math.abs(y);
        let x = Math.abs(x);

        while ((i < 15) & ~is_done) {
            let is_done = (32767 - (array[i] - 1)) < (array[i] - 1);

            if (~is_done) {
                let array[i + 1] = array[i] + array[i];
                let is_done = array[i + 1] - 1 > (x - 1);

                if (~is_done) {
                    let i = i + 1;
                }
            }
        }

        while (i > -1) {
            if (~((array[i] - 1) > (x - 1))) {
                let result = result + twoToThe[i];
                let x = x - array[i];
            }

            let i = i - 1;
        }

        if (is_neg) {
            let result = -result;
        }

        return result;
    }

    function int sqrt(int x) {
        var int j, candidate, pow, y;

        if (x < 0) {
            do Sys.error(4);
        }

        let j = 7;

        while (j > -1) {
            let candidate = y + twoToThe[j];
            let pow = candidate * candidate;

            if (~(pow > x) & ~(pow < 0)) {
                let y = candidate;
            }

            let j = j - 1;
        }

        return y;
    }

    function int max(int x, int y) {
        if (x > y) {
            let y = x;
        }

        return y;
    }

    function int min(int x, int y) {
        if (x < y) {
            let y = x;
        }

        return y;
    }
}
