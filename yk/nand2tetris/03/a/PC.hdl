// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    
    // If inc is true, load should be true to update the register.
    Mux (a=load, b=true, sel=inc, out=load0);
    Inc16 (in=out2, out=out1);
    Mux16 (a=in, b=out1, sel=inc, out=in0);
    
    // If load is true, inc should be ignored.
    Mux (a=load0, b=load, sel=load, out=load1);
    Mux16 (a=in0, b=in, sel=load, out=in1);
    
    // If reset is true, load should be true to update the register.
    Mux (a=load1, b=true, sel=reset, out=load2);
    Mux16 (a=in1, b=false, sel=reset, out=in2);
    
    Register (in=in2, load=load2, out=out, out=out2);
}
